package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"
	"fmt"

	"github.com/weeb-vip/scraper-api/graph/generated"
	"github.com/weeb-vip/scraper-api/graph/model"
	"github.com/weeb-vip/scraper-api/internal/resolvers"
)

// ScraperAPI is the resolver for the scraperAPI field.
func (r *apiInfoResolver) ScraperAPI(ctx context.Context, obj *model.APIInfo) (*model.ScraperAPI, error) {
	panic(fmt.Errorf("not implemented: ScraperAPI - scraperAPI"))
}

// SaveLink is the resolver for the saveLink field.
func (r *mutationResolver) SaveLink(ctx context.Context, input *model.SaveLinkInput) (*model.Link, error) {
	return resolvers.SaveLink(ctx, r.LinkService, input.AnimeID, input.ThetvdbID, input.Season, input.Name)
}

// SearchTheTvdb is the resolver for the searchTheTVDB field.
func (r *queryResolver) SearchTheTvdb(ctx context.Context, input *model.TheTVDBSearchInput) ([]*model.TheTVDBAnime, error) {
	return resolvers.SearchAnime(ctx, r.TheTVDBService, input.Query)
}

// GetSavedLinks is the resolver for the getSavedLinks field.
func (r *queryResolver) GetSavedLinks(ctx context.Context) ([]*model.Link, error) {
	return resolvers.GetSavedLinks(ctx, r.LinkService)
}

// GetEpisodesFromTheTvdb is the resolver for the getEpisodesFromTheTVDB field.
func (r *queryResolver) GetEpisodesFromTheTvdb(ctx context.Context, thetvdbID string) ([]*model.TheTVDBEpisode, error) {
	return resolvers.GetAnimeEpisodes(ctx, r.TheTVDBService, thetvdbID)
}

// SyncLink is the resolver for the syncLink field.
func (r *queryResolver) SyncLink(ctx context.Context, linkID string) (bool, error) {
	return resolvers.SyncLink(ctx, r.LinkService, linkID)
}

// SyncIDs is the resolver for the syncIDs field.
func (r *queryResolver) SyncIDs(ctx context.Context) (bool, error) {
	return resolvers.SyncIDs(ctx, r.LinkService, r.AnimeService)
}

// ApiInfo returns generated.ApiInfoResolver implementation.
func (r *Resolver) ApiInfo() generated.ApiInfoResolver { return &apiInfoResolver{r} }

// Mutation returns generated.MutationResolver implementation.
func (r *Resolver) Mutation() generated.MutationResolver { return &mutationResolver{r} }

// Query returns generated.QueryResolver implementation.
func (r *Resolver) Query() generated.QueryResolver { return &queryResolver{r} }

type apiInfoResolver struct{ *Resolver }
type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
